services:
  score: # Script
    build: scorer
    depends_on:
      server:
        condition: service_healthy
  database: # Database
    build: database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 2s
  server: # Base server
    build: server
    ports:
      - "${SERVER_PORT}:3000"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "echo 'hello'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 2s
    restart: always
  client: # cli client
    tty: true
    stdin_open: true
    build: client
    env_file:
      - .env



